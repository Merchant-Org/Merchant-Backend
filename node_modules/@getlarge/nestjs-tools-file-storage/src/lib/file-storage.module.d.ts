import { DynamicModule } from '@nestjs/common';
import { FileStorageLocal } from './file-storage-fs.class';
import { FileStorageGoogle } from './file-storage-google.class';
import { FileStorageS3 } from './file-storage-s3.class';
import { FileStorageModuleAsyncOptions, FileStorageModuleOptions, StorageType } from './types';
export declare function getFileStorageStrategy<S extends StorageType, E extends Record<string, unknown>>(storageType: S, config: FileStorageModuleOptions<E>[S]): FileStorageLocal | FileStorageS3 | FileStorageGoogle;
export declare function getFileStorageStrategy<S extends StorageType = StorageType.FS, E extends Record<string, unknown> = Record<string, unknown>>(storageType: S, config: FileStorageModuleOptions<E>[S]): FileStorageLocal;
export declare function getFileStorageStrategy<S extends StorageType = StorageType.S3, E extends Record<string, unknown> = Record<string, unknown>>(storageType: S, config: FileStorageModuleOptions<E>[S]): FileStorageS3;
export declare function getFileStorageStrategy<S extends StorageType = StorageType.GC, E extends Record<string, unknown> = Record<string, unknown>>(storageType: S, config: FileStorageModuleOptions<E>[S]): FileStorageGoogle;
export declare class FileStorageModule {
    static forRoot(storageType: StorageType.FS | StorageType.S3 | StorageType.GC, options?: Partial<FileStorageModuleOptions<Record<string, unknown>>>, isGlobal?: boolean): DynamicModule;
    static forRootAsync(options: FileStorageModuleAsyncOptions, isGlobal?: boolean): DynamicModule;
}
