"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileStorageService = void 0;
const tslib_1 = require("tslib");
const common_1 = require("@nestjs/common");
const inject_file_storage_decorator_1 = require("./inject-file-storage.decorator");
let FileStorageService = class FileStorageService {
    constructor(fileStorage) {
        this.fileStorage = fileStorage;
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    transformFilePath(fileName, methodType, request, options) {
        return this.fileStorage.transformFilePath(fileName, methodType, request, options);
    }
    fileExists(args) {
        return this.fileStorage.fileExists(args);
    }
    moveFile(args) {
        return this.fileStorage.moveFile(args);
    }
    uploadFile(args) {
        return this.fileStorage.uploadFile(args);
    }
    uploadStream(args) {
        return this.fileStorage.uploadStream(args);
    }
    downloadFile(args) {
        return this.fileStorage.downloadFile(args);
    }
    downloadStream(args) {
        return this.fileStorage.downloadStream(args);
    }
    deleteFile(args) {
        return this.fileStorage.deleteFile(args);
    }
    getFileMeta(args) {
        return this.fileStorage.getFileMeta(args);
    }
    readDir(args) {
        return this.fileStorage.readDir(args);
    }
    deleteDir(args) {
        return this.fileStorage.deleteDir(args);
    }
};
exports.FileStorageService = FileStorageService;
exports.FileStorageService = FileStorageService = tslib_1.__decorate([
    (0, common_1.Injectable)(),
    tslib_1.__param(0, (0, inject_file_storage_decorator_1.InjectFileStorageStrategy)()),
    tslib_1.__metadata("design:paramtypes", [Function])
], FileStorageService);
//# sourceMappingURL=file-storage.service.js.map